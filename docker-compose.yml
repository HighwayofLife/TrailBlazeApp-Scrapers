version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - ./cache:/app/cache
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - trailblaze-network
    ports:
      - "8000:8000"  # If you have a web interface

  mcp:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - ./cache:/app/cache
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - trailblaze-network
    ports:
      - "8001:8001"
    command: sh -c "pip install -r mcp-requirements.txt && python -m app.mcp.server"

  test:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
      - ./cache:/app/cache
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - trailblaze-network
    command: ["pytest", "-xvs"]

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5433:5432"
    networks:
      - trailblaze-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  trailblaze-network:
    driver: bridge

volumes:
  postgres_data:
